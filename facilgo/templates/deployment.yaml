apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.appName }}-depl"
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
        - name: {{ .Values.appName }}
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          imagePullSecrets:
            - name: docker-login-do
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.config.name }}
                  key: NODE_ENV
          volumeMounts:
            - name: facilgo-secret-volume
              mountPath: /secrets/
            - name: {{ .Values.volume.config_name }}
              mountPath: /configs/
      volumes:
        - name: {{ .Values.volume.config_name }}
          configMap:
            name: facilgo-srv-config #name of our configmap object
        - name: facilgo-secret-volume
          secret:
            secretName: "{{ .Values.service.name }}-secrets"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.appName }}
spec:
  type: {{ .Values.service.type }}
  selector:
    app: {{ .Values.appName }}
  ports:
    - name: {{ .Values.appName }}
      protocol: TCP
      port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.targetPort }}
